Index: testing/test_yield.py
===================================================================
--- testing/test_yield.py	(revision 2e35fb7fb80c3ff0866cee35aae0a905d41be77d)
+++ testing/test_yield.py	(revision 2e35fb7fb80c3ff0866cee35aae0a905d41be77d)
@@ -1,12 +0,0 @@
-#yield生成器
-
-def fun():
-    for i in range(3):
-        print(f"i = {i}")
-        #yield
-        print('end')
-
-f = fun()
-next(f)
-next(f)
-next(f)
\ No newline at end of file
Index: testing/conftest.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- testing/conftest.py	(revision 2e35fb7fb80c3ff0866cee35aae0a905d41be77d)
+++ testing/conftest.py	(date 1608564578782)
@@ -1,16 +1,16 @@
-import pytest
-
-#conftest公用模块，在执行同级目录用例时，首先查看此目录否有可调用模块
-
-#scope可控制fixture的作用域   scope='session'整个项目执行一次，scope='module'每个项目执行已一次,autouse=True自动每个模块都调用
-#@pytest.fixture(autouse=True,params=['user1','user2','user3'])
-@pytest.fixture(params=['user1','user2','user3'])
-#此处要接收request
-def login(request):
-    print("登录方法")
-
-    #使用request.param获取参数
-    print(request.param)
-    #yield激活fixture teard的方法
-    yield ['username','password']
-    print('teardown')
+# import pytest
+#
+# #conftest公用模块，在执行同级目录用例时，首先查看此目录否有可调用模块
+#
+# #scope可控制fixture的作用域   scope='session'整个项目执行一次，scope='module'每个项目执行已一次,autouse=True自动每个模块都调用
+# #@pytest.fixture(autouse=True,params=['user1','user2','user3'])
+# @pytest.fixture(params=['user1','user2','user3'])
+# #此处要接收request
+# def login(request):
+#     print("登录方法")
+#
+#     #使用request.param获取参数
+#     print(request.param)
+#     #yield激活fixture teard的方法
+#     yield ['username','password']
+#     print('teardown')
Index: testing/test_cart.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- testing/test_cart.py	(revision 2e35fb7fb80c3ff0866cee35aae0a905d41be77d)
+++ testing/test_cart.py	(date 1608564568258)
@@ -1,11 +1,11 @@
-import pytest
-def test_cart1(login):
-    print("购物车用例1")
-
-
-def test_cart2(login):
-    print("购物车用例2")
-
-@pytest.mark.parametrize('a,b',[(1,2),(3,4)])
-def test_cart3(a,b):
-    print("购物车用例3")
\ No newline at end of file
+# import pytest
+# def test_cart1(login):
+#     print("购物车用例1")
+#
+#
+# def test_cart2(login):
+#     print("购物车用例2")
+#
+# @pytest.mark.parametrize('a,b',[(1,2),(3,4)])
+# def test_cart3(a,b):
+#     print("购物车用例3")
\ No newline at end of file
Index: testing/test_calc.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- testing/test_calc.py	(revision 2e35fb7fb80c3ff0866cee35aae0a905d41be77d)
+++ testing/test_calc.py	(date 1608565852531)
@@ -3,6 +3,22 @@
 sys.path.append('..')
 from pythoncode.calc import Calculator
 
+#模块级别
+def setup_module():
+	print("模块级别setup")
+
+def teardown_module():
+	print("模块级别teardown")
+
+#函数级别  类外面的使用def 定义叫做函数
+#         在类里面的使用def 定义的叫方法
+def setup_function():
+	print("函数级别setup")
+
+def teardown_function():
+	print("函数级别teardown")
+
+
 @pytest.mark.add
 def test_add():
 	cal = Calculator()
@@ -15,4 +31,34 @@
 @pytest.mark.div
 def test_div():
 	cal = Calculator()
-	assert 3 == cal.div(1,1)
\ No newline at end of file
+	assert 1 == cal.div(1,1)
+
+
+class TestCalc:
+	def setup_class(self):
+		print("类级别setup")
+
+	def teardown_class(self):
+		print("类级别teardown")
+
+
+	def setup(self):
+		self.cal = Calculator()
+		print("setup")
+
+	def teardown(self):
+		print("teardown")
+
+
+
+
+	@pytest.mark.add
+	def test_add(self, a, b, result):
+		assert result == self.cal .add(a, b)
+
+	def test_add1(self):
+		assert 3 == self.cal .add(1, 2)
+
+	@pytest.mark.div
+	def test_div(self):
+		assert 1 == self.cal .div(1, 1)
\ No newline at end of file
Index: testing/test_login.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- testing/test_login.py	(revision 2e35fb7fb80c3ff0866cee35aae0a905d41be77d)
+++ testing/test_login.py	(date 1608564568251)
@@ -1,11 +1,11 @@
-import pytest
-
-#如果方法中传入login，测试用例执行前先执行login
-def  test_case1(login):
-    print(f"case1 login = {login}")
-
-def test_case2():
-    print("case2")
-
-def test_case3():
-    print("case3")
\ No newline at end of file
+# import pytest
+#
+# #如果方法中传入login，测试用例执行前先执行login
+# def  test_case1(login):
+#     print(f"case1 login = {login}")
+#
+# def test_case2():
+#     print("case2")
+#
+# def test_case3():
+#     print("case3")
\ No newline at end of file
diff --git testing/result testing/result
deleted file mode 100644
index 07a225107476b7eec65223421b08025326d1457b..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

